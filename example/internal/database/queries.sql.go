// Code generated by sqlc. DO NOT EDIT.
// source: queries.sql

package database

import (
	"context"
)

const usersAll = `-- name: UsersAll :many
SELECT id, name, email FROM users
`

func (q *Queries) UsersAll(ctx context.Context) ([]*User, error) {
	rows, err := q.db.Query(ctx, usersAll)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []*User
	for rows.Next() {
		var i User
		if err := rows.Scan(&i.ID, &i.Name, &i.Email); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const usersByID = `-- name: UsersByID :one
SELECT id, name, email FROM users WHERE id = $1
`

func (q *Queries) UsersByID(ctx context.Context, id int32) (*User, error) {
	row := q.db.QueryRow(ctx, usersByID, id)
	var i User
	err := row.Scan(&i.ID, &i.Name, &i.Email)
	return &i, err
}
